#pragma once

class Scene;
//class Camera::ptr;
class Sampler;

#include "Camera.h"
#include "Sampler.h"

#include <memory>

///////////////////////////////////////////////////////////////////////////////
/// \brief Super class of Jobs
///////////////////////////////////////////////////////////////////////////////
class Job
{
public:
	///////////////////////////////////////////////////////////////////////////
	/// \brief Default Constructor.
	///////////////////////////////////////////////////////////////////////////
	Job(); 

	///////////////////////////////////////////////////////////////////////////
	/// \brief Constructor.
	///
	/// \param offsetX Block X offset
	/// \param offsetY Block Y offset
	/// \param sizeX block X length
	/// \param sizeY block Y length
	/// \param scene Pointer to the scene
	/// \param camera Pointer to the camera
	/// \param sampler Pointer to the main scene sampler
	///////////////////////////////////////////////////////////////////////////
	Job(int offsetX, int offsetY, int sizeX, int sizeY, Scene* scene, Camera::ptr camera, Sampler::ptr sampler);

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Destructor
	///////////////////////////////////////////////////////////////////////////////
	virtual ~Job();

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Indicates whether the job is finished.
	///
	/// \return true if the job is finished
	///////////////////////////////////////////////////////////////////////////////
	bool isFinished() const;

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Stops the jobs.
	///////////////////////////////////////////////////////////////////////////////
	void stop() {myIsFinished = true;}

	///////////////////////////////////////////////////////////////////////////////
	/// \brief Main job function
	///////////////////////////////////////////////////////////////////////////////
	virtual void run() = 0;

protected:
	Scene* myScene;
	Camera::ptr myCamera;
	Sampler::ptr mySampler;
	int myOffsetX;
	int myOffsetY;
	int mySizeX;
	int mySizeY;

	bool myIsFinished;
};
